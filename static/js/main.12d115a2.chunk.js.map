{"version":3,"sources":["components/Counter.js","components/Child.js","components/Change.js","App.js","serviceWorker.js","index.js"],"names":["Counter","props","sayiAzalt","randomSayi","Math","floor","random","setState","sayi","state","sayiArtir","style","backgroundColor","padding","marginTop","this","onClick","width","margin","Component","Child","isim","Change","stateDegistir","baslik","ders","stateDegistir2","notShowSehir","newDurum","isDisplayed","durum","changeBG","newColor","color","sehir","paddingRight","paddingLeft","marginBottom","App","changeIsim","e","name","target","value","className","onChange","type","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.12d115a2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            sayi: 0\r\n        }\r\n    }\r\n\r\n    sayiAzalt = () => {\r\n        const randomSayi = Math.floor(Math.random() * 10 +1)\r\n        // console.log(randomSayi)\r\n        this.setState({\r\n            sayi: this.state.sayi - randomSayi\r\n        })\r\n    }\r\n\r\n    sayiArtir = () => {\r\n        const randomSayi = Math.floor(Math.random() * 10 + 1)\r\n        this.setState({\r\n            sayi: this.state.sayi + randomSayi\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{ backgroundColor: \"lightgreen\", padding:\"10px\", marginTop: \"5px\" }}>\r\n                <h3>Click Buttons to increase and decrease the counter</h3>\r\n                <p>{this.state.sayi}</p>\r\n\r\n                <button onClick={this.sayiAzalt} style={{ width: \"150px\", padding: \"10px\", margin: \"5px\" }}>\r\n                    Decrease Number \r\n                </button>\r\n                <button onClick={this.sayiArtir} style={{ width: \"150px\", padding: \"10px\", margin: \"5px\" }}>\r\n                    Increase Number \r\n                </button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counter;","import React from 'react'\r\n\r\nfunction Child(props) {\r\n    return (\r\n        <div>\r\n            <h2>Hey, My name is {props.isim}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Child\r\n","import React, { Component } from 'react';\r\n\r\nclass Change extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            baslik: \"React Ogreniyorum\",\r\n            ders: \"React JS\",\r\n            sehir: \"istanbul\",\r\n            isDisplayed: true,\r\n            durum: \"Hide City\",\r\n            color: \"lightgrey\",\r\n        }\r\n    }\r\n\r\n    stateDegistir = () => {\r\n        this.setState({\r\n            baslik: \"HTML ogreniyorum\",\r\n            ders: \"CSS\"\r\n        })\r\n    }\r\n\r\n    stateDegistir2 = () => {\r\n        this.setState({\r\n            baslik: \"JS ogreniyorum\",\r\n            ders: \"JS\"\r\n        })\r\n    }\r\n\r\n    notShowSehir = () => {\r\n        let newDurum = this.state.isDisplayed === true ? \"Show City\" : \"Hide City\"\r\n\r\n        this.setState({\r\n            isDisplayed: !this.state.isDisplayed,\r\n            durum: newDurum\r\n        })\r\n    }\r\n\r\n    changeBG = () => {\r\n        const newColor = this.state.color === \"lightgrey\" ? \"lightblue\" : \"lightgrey\"\r\n        this.setState({\r\n            color: newColor\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ backgroundColor: this.state.color, paddingRight: \"50px\", paddingLeft: \"50px\" }}>\r\n                <h2>{this.state.baslik  /*burda aslinda sunu diyorum; this.state'deki key'i baslik olan deger*/}</h2>\r\n                <p>{this.state.ders  /*burda aslinda sunu diyorum; this.state'deki key'i ders olan deger*/}</p>\r\n\r\n                <button style={{ width: \"150px\", padding: \"10px\", margin: \"5px\" }} onClick={this.stateDegistir}>Change State</button>\r\n                <button style={{ width: \"150px\", padding: \"10px\", margin: \"5px\" }} onClick={this.stateDegistir2}>Change State-2</button>\r\n                <hr />\r\n                {this.state.isDisplayed ? <p>{this.state.sehir}</p> : null}\r\n\r\n                <button style={{ width: \"150px\", padding: \"10px\", margin: \"5px\" }} onClick={this.notShowSehir}>{this.state.durum}</button>\r\n                <hr />\r\n                <button style={{ width: \"150px\", padding: \"10px\", margin: \"5px\", marginBottom: \"10px\" }} onClick={this.changeBG}>\r\n                    Do BG {this.state.color === \"lightgrey\" ? \"lightblue\" : \"lightgrey\"}\r\n                </button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Change;","import React, { Component } from 'react';\nimport './App.css';\nimport Counter from './components/Counter';\nimport Child from './components/Child';\nimport Change from './components/Change';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      name: \"\",\n      // name: \"Yavuz Gürdal\"\n    }\n  }\n\n  // Bu asagidaki ile ayni. Bu daha daogru bir gosterim. Arrow function.\n  changeIsim = e => this.setState({ name: e.target.value })\n\n  /*\n  changeIsim = (e) => { // burdaki e, event demek. Burdaki karsiligi onChange'dir. Yani input icine birsey\n                        // yazilma islemi.\n    this.setState({\n      name: e.target.value // inputa girilen degeri anlık olarak al ve onu key'i name olan state elemanina \n                           // deger olarak ata demek.\n    })\n  }\n  */ \n\n  render() {\n\n    return (\n      <div className=\"App\">\n        \n        <Change />\n\n        <Counter />\n        \n        <div style={{ backgroundColor: \"lightblue\", padding:\"10px\", marginTop:\"5px\"}}>\n          <Child isim={this.state.name} />\n          <input  \n                  onChange={this.changeIsim}\n                  value={this.state.name} // inputun baslangic degeri olarak state'dekini name'i atamis olduk               \n                  style={{ width: \"150px\", padding: \"10px\", margin: \"5px\" }} \n                  type=\"text\"\n          />         \n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}